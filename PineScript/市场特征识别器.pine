// This Pine Script® code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © lujingnwpu
//@version=6
indicator("市场特征识别器 (Market Character Identifier)", shorttitle="MCI", overlay=true)

// --- 通用输入参数 ---
len_avg_body = input.int(20, "平均K线实体长度周期", minval=1, maxval=100, group="基础参数")
len_avg_vol = input.int(20, "平均交易量周期", minval=1, maxval=100, group="基础参数")
swing_len = input.int(10, "波段高低点周期", minval=5, maxval=50, group="基础参数")
context_range_len = input.int(30, "交易区间检测周期", minval=10, maxval=200, group="基础参数")

// --- 基础计算 ---
avg_body_size = ta.ema(math.abs(close - open), len_avg_body)
avg_volume = ta.ema(volume, len_avg_vol)
atr = ta.atr(14)

// 波段高低点
swing_high = ta.highest(high, swing_len)[1]
swing_low = ta.lowest(low, swing_len)[1]

// --- 强弱度量化函数 ---
method calc_strength(float body_size, float volume_ratio, float breakout_size, float follow_through) =>
    float strength = 0.0
    
    // 实体强度 (0-25分)
    strength := strength + math.min(25, (body_size / avg_body_size) * 20)
    
    // 成交量强度 (0-25分)
    strength := strength + math.min(25, (volume_ratio - 1) * 10)
    
    // 突破幅度 (0-25分)
    strength := strength + math.min(25, (breakout_size / atr) * 20)
    
    // 后续跟进强度 (0-25分)
    strength := strength + math.min(25, follow_through * 25)
    
    strength

// --- 市场特征识别函数 ---
method identify_character(float src_open, float src_close, float src_high, float src_low, float src_vol) =>
    float bull_strength = 0.0
    float bear_strength = 0.0
    
    // 计算牛市特征
    bool is_bull = src_close > src_open
    float bull_body = src_close - src_open
    float bull_volume_ratio = src_vol / avg_volume
    float bull_breakout = src_high - swing_high
    float bull_follow = src_close > src_close[1] ? 1.0 : 0.0
    
    if is_bull
        bull_strength := calc_strength(bull_body, bull_volume_ratio, bull_breakout, bull_follow)
    
    // 计算熊市特征
    bool is_bear = src_open > src_close
    float bear_body = src_open - src_close
    float bear_volume_ratio = src_vol / avg_volume
    float bear_breakout = swing_low - src_low
    float bear_follow = src_close < src_close[1] ? 1.0 : 0.0
    
    if is_bear
        bear_strength := calc_strength(bear_body, bear_volume_ratio, bear_breakout, bear_follow)
    
    [bull_strength, bear_strength]

// --- 执行特征识别 ---
[bull_str, bear_str] = identify_character(open, close, high, low, volume)

// --- 定义市场状态 ---
var string market_state = na
var color state_color = na

if bull_str > 75 and bull_str > bear_str
    market_state := "强势牛市"
    state_color := color.green
else if bull_str > 25 and bull_str > bear_str
    market_state := "弱势牛市"
    state_color := color.lime
else if bear_str > 75 and bear_str > bull_str
    market_state := "强势熊市"
    state_color := color.red
else if bear_str > 25 and bear_str > bull_str
    market_state := "弱势熊市"
    state_color := color.maroon
else
    market_state := "震荡市"
    state_color := color.gray

int state_num = switch market_state
    "强势牛市" => 1
    "弱势牛市" => 2
    "强势熊市" => 3
    "弱势熊市" => 4
    "震荡市" => 5
    => na
// --- 绘制标识 ---
// 在K线顶部显示市场状态
var label state_label = na
// 检测状态变化
bool state_changed = ta.change(state_num) != 0

if barstate.islast
    if not na(state_label)
        label.delete(state_label)
    state_label := label.new(x=bar_index, y=high, text=market_state + "\n强度: " + str.tostring(math.max(bull_str, bear_str), "#.##"), color=state_color, style=label.style_label_down, textcolor=color.white, size=size.normal)

// --- 添加趋势线 ---
var line trend_line = line.new(na, na, na, na, color=color.gray, width=2)

if state_changed
    trend_line.delete()
    trend_line := line.new(x1=bar_index[10], y1=close[10], x2=bar_index, y2=close, color=state_color, width=2, extend=extend.none)